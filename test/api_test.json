{
	"info": {
		"_postman_id": "d93af608-9e59-424b-9513-0059830b13c0",
		"name": "anon-msgs Flow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"username\": { \"type\": \"string\" },\r",
							"        \"token\": { \"type\": \"string\" }\r",
							"    },\r",
							"    \"required\": [\"id\", \"name\", \"username\", \"token\"]\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/auth/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"username\": { \"type\": \"string\" },\r",
							"        \"token\": { \"type\": \"string\" }\r",
							"    },\r",
							"    \"required\": [\"id\", \"name\", \"username\", \"token\"]\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"auth_token\", \"Bearer \"+jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/auth/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"body\": { \"type\": \"string\" },\r",
							"        \"user\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"id\": { \"type\": \"string\" },\r",
							"                \"username\": { \"type\": \"string\" },\r",
							"                \"name\": { \"type\": \"string\" },\r",
							"            },\r",
							"            \"required\": [\"id\", \"username\", \"name\"],\r",
							"        },\r",
							"    },\r",
							"    \"required\": [\"id\", \"body\"],\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"message_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"body\": \"new message\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/message/{{username}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"message",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Messages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"skip\": { \"type\": \"number\" },\r",
							"        \"limit\": { \"type\": \"number\" },\r",
							"        \"total\": { \"type\": \"number\" },\r",
							"        \"user\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"id\": { \"type\": \"string\" },\r",
							"                    \"body\": { \"type\": \"string\" },\r",
							"                    \"created_at\": { \"type\": \"string\" },\r",
							"                },\r",
							"                \"required\": [\"_id\", \"body\", \"created_at\"]\r",
							"            },\r",
							"        },\r",
							"    },\r",
							"    \"required\": [\"skip\", \"limit\", \"total\"],\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/message/?page=0",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"message",
						""
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"    },\r",
							"    \"required\": [\"id\",],\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/message/{{message_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"message",
						"{{message_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"username\": { \"type\": \"string\" },\r",
							"    },\r",
							"    \"required\": [\"id\", \"name\", \"username\",]\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/profile/{{username}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"profile",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"username\": { \"type\": \"string\" },\r",
							"    },\r",
							"    \"required\": [\"id\", \"name\", \"username\",]\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{edited_name}}\",\r\n    \"username\": \"{{edited_username}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/profile/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"profile",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"    },\r",
							"    \"required\": [\"id\",],\r",
							"};\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/profile/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"profile",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "localhost:3001",
			"type": "default"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "default"
		},
		{
			"key": "name",
			"value": "test user",
			"type": "default"
		},
		{
			"key": "username",
			"value": "test_user",
			"type": "default"
		},
		{
			"key": "password",
			"value": "very strong password",
			"type": "default"
		},
		{
			"key": "message_id",
			"value": "",
			"type": "default"
		},
		{
			"key": "edited_name",
			"value": "edited user",
			"type": "default"
		},
		{
			"key": "edited_username",
			"value": "edited_user",
			"type": "default"
		}
	]
}